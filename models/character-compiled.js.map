{"version":3,"sources":["character.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAeA,IAAI,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;;;AAGnC,IAAI,eAAe,GAAG,IAAI,QAAQ,CAAC,MAAM,CAAC;;AAEtC,eAAW,EAAG,EAAE,IAAI,EAAE,MAAM,EAAC,MAAM,EAAC,IAAI,EAAC,KAAK,EAAC,IAAI,EAAE;;AAErD,QAAI,EAAE,MAAM;AACZ,QAAI,EAAE,MAAM;AACZ,UAAM,EAAE,MAAM;AACd,aAAS,EAAE,MAAM;AACjB,QAAI,EAAI,EAAE,IAAI,EAAE,MAAM,EAAG,WAAS,CAAC,EAAE;AACrC,UAAM,EAAE,EAAE,IAAI,EAAE,MAAM,EAAG,WAAS,CAAC,EAAE;AACrC,WAAO,EAAC,EAAE,IAAI,EAAE,MAAM,EAAG,WAAS,CAAC,EAAC;AACpC,UAAM,EAAE,EAAE,IAAI,EAAE,CAAC,MAAM,CAAC,EAAG,KAAK,EAAC,IAAI,EAAC;AACtC,SAAK,EAAE,EAAG,IAAI,EAAC,OAAO,EAAQ,WAAQ,KAAK,EAAE;;CAEhD,CAAC,CAAC;;AAGH,MAAM,CAAC,OAAO,GAAG,QAAQ,CAAC,KAAK,CAAC,WAAW,EAAE,eAAe,CAAC,CAAC","file":"character-compiled.js","sourcesContent":["/*\n* Chris Samuel\n* ksamuel.chris@icloud.com\n*\n*   We will implement the back-end code for adding and saving new characters to the database.\n*\n*   mongoDB\n*   mongoose\n*\n*   PLEASE MAKE SURE THIS FILE IS IN THE ROOT OF YOUR PROJECT (Near package.json and server.js)\n*\n* */\n\n\n//require mongoose\nvar mongoose = require('mongoose');\n\n//define the schema for our characters database.\nvar characterSchema = new mongoose.Schema({\n\n    characterId : { type: String,unique:true,index:true },\n\n    name: String,\n    race: String,\n    gender: String,\n    bloodline: String,\n    wins:   { type: Number , default: 0 },\n    losses: { type: Number , default: 0 },\n    reports:{ type: Number , default: 0},\n    random: { type: [Number] , index:'2d'},\n    voted: {  type:Boolean   ,    default:false }\n\n});\n\n\nmodule.exports = mongoose.model('Character', characterSchema);\n\n/*what is mongoose schema?\n*\n* A schema is just a representation of your data in MongoDB. This is where you can enforce a\n* certain field to be of particular type. A field can also be required, unique or contain only specified characters.\n*\n* */\n\n\n/*\n*\n*\n* */"]}