{"version":3,"sources":["FooterStore.js"],"names":[],"mappings":";;;;;;;;;;;;mBACgB,QAAQ;;;;oCACE,0BAA0B;;;;IAE9C,WAAW;AACF,aADT,WAAW,GACA;8BADX,WAAW;;AAET,YAAI,CAAC,WAAW,mCAAe,CAAC;AAChC,YAAI,CAAC,UAAU,GAAG,EAAE,CAAC;KACxB;;;;iBAJC,WAAW;;eAMY,mCAAC,IAAI,EAAC;AAC3B,gBAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;SACrC;;;eAEoB,+BAAC,KAAK,EAAC;;AAExB,kBAAM,CAAC,KAAK,CAAC,KAAK,CAAC,YAAY,IAAI,KAAK,CAAC,YAAY,CAAC,OAAO,IAAI,KAAK,CAAC,YAAY,IAAI,KAAK,CAAC,UAAU,CAAC,CAAC;SAC5G;;;WAbC,WAAW;;;qBAgBF,iBAAI,WAAW,CAAC,WAAW,CAAC","file":"FooterStore-compiled.js","sourcesContent":["\nimport alt from '../alt';\nimport FooterActions from '../actions/FooterActions';\n\nclass FooterStore {\n    constructor(){\n        this.bindActions(FooterActions);\n        this.characters = [];\n    }\n    //Get the Top 5 Characters from array\n    onGetTopCharactersSuccess(data){\n        this.characters = data.slice(0,5);\n    }\n\n    onGetTopCharacterFail(JqXhr){\n        //Handle multiple response formats,  fall back to HTTP status code number.\n        toastr.error(jqXhr.responseJSON && jqXhr.responseJSON.message || jqXhr.responseText || jqXhr.statusText);\n    }\n }\n\nexport default alt.createStore(FooterStore);\n\n/*\n*   Purpose of this document.\n*\n*   All instance variables of the store (i.e. value assigned to this , will become part of the state.)\n*   When footer component initially calls the Footer.getState() it receives the current state of the store\n*   specified in the constructor\n*\n*\n*\n* */"]}